Необходимо реализовать имплементацию класса CandyServiceBase -  многопоточного сервиса по пожиранию конфет, со следующими условиями:
1. При инциализации сервиса пожирания, ему передается уже готовый список доступных пожирателей конфет; +
2. Время пожирания конфет одним пожирателем может занимать некоторое время; +
3. Конфеты должны пожираться паралельно максимально доступным количеством пожирателей;
4. Один пожитратель может есть только одну конфету в момент времени;
5. У конфет есть вкус(можно рассматривать как некий конечный enum  или справочник вкусов определяемый по его id); +
6. Одновременно могут пожираться только разные вкусы конфет, два разных пожирателя не должны одновременно кушать конфеты с одинаковым вкусом;
7. Фактом съедения конфеты является передача пожирателю конфеты в метод ICandyEater.eat и ожидание его выполнения;
8. Реализация интерфейсов самих конфет и пожирателей не требуется; +
9. CandyServiceBase.addCandy должен максимально быстро возращать управление в вызвавший его код, не должно быть блокировки;
10. Требуется соблюсти насколько это возможно порядок съедения конфет  в порядке их поступления для конфет одного вкуса;
11. За основу взять следующий код:

/**
 * Конфета, имеет вкус, можно съесть
 */
public interface ICandy {
    /**
     * Получить вкус конфеты
     */
    int getCandyFlavour();
}

/**
 * Интерфейс пожирателя конфет, ест любые конфеты, но так как захочет.
 */
public interface ICandyEater {

    /**
     * Съесть конфету, может занять время
     * @param candy
     */
    void eat(ICandy candy) throws Exception;
}

/**
 * Сервис пожирания конфет, требует реализации
 */
public abstract class CandyServiceBase {

    /**
     * Сервис получает при инициализации массив доступных пожирателей конфет
     * @param candyEaters
     */
    public CandyServiceBase(ICandyEater[] candyEaters) {
    }

    /**
     * Добавить конфету на съедение
     * @param candy
     */
    public abstract void addCandy(ICandy candy);
}